{
  "swagger": "2.0",
  "info": {
    "title": "User/Products API",
    "description": "User and Product handler",
    "version": "1.0.0"
  },
  "host": "productmanagementproject.onrender.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/docs": {
      "get": {
        "description": "API documentation",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products": {
      "post": {
        "description": "Creates a new product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "example": "any" },
                "description": { "example": "any" },
                "price": { "example": "any" },
                "image": { "example": "any" },
                "category": { "example": "any" },
                "stock": { "example": "any" },
                "rating": { "example": "any" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "get": {
        "description": "Retrieves all products",
        "responses": {
          "200": { "description": "OK" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Retrieves a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "description": "Updates a specific product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Updated Product Name" },
                "description": { "type": "string", "example": "Updated Product Description" },
                "price": { "type": "number", "example": 123.45 },
                "image": { "type": "string", "example": "http://example.com/updated-product-image.jpg" },
                "category": { "type": "string", "example": "Updated Product Category" },
                "stock": { "type": "number", "example": 10 },
                "rating": { "type": "number", "example": 4 }
              }
            }
          }
        ],
        "responses": {
          "200": { 
            "description": "Product updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Product updated" },
                "updatedProduct": { "$ref": "#/definitions/Product" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Product not found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "description": "Deletes a specific product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/users/register": {
      "post": {
        "description": "Registers a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "example": "any" },
                "email": { "example": "any" },
                "password": { "example": "any" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "Logs in a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": { "example": "any" },
                "password": { "example": "any" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Retrieves all users",
        "responses": {
          "200": { "description": "OK" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Retrieves a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "description": "Updates a specific user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Updated User Name" },
                "email": { "type": "string", "example": "Updated User Email" },
                "password": { "type": "string", "example": "Updated User Password" }
              }
            }
          }
        ],
        "responses": {
          "200": { 
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User updated" },
                "updatedUser": { "$ref": "#/definitions/User" }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "User not found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "description": "Deletes a specific user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "description": { "type": "string" },
        "price": { "type": "number" },
        "image": { "type": "string" },
        "category": { "type": "string" },
        "stock": { "type": "number" },
        "rating": { "type": "number" }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" }
      }
    }
  }
}